{
  "entity_sound_features.config.pre_check": "預先檢查所有實體聲音",
  "entity_sound_features.config.pre_check.tooltip": "如果啟用，ESF 將會在第一次載入時快取所有實體初始生成條件的所有可能聲音。\n如果停用，ESF 將只會在第一次播放聲音時，快取每個聲音的實體生成條件。",
  "entity_sound_features.config.log_setup": "記錄聲音設定",
  "entity_sound_features.config.log_setup.tooltip": "將會記錄所有聲音 .properties 的設定資訊。",
  "entity_sound_features.config.announce": "公告聲音",
  "entity_sound_features.config.announce.tooltip": "允許將 ESF 相容的聲音公告到記錄檔。\n有助於發現可能要修改的聲音。",
  "entity_sound_features.config.announce.esf": "使用 .properties",
  "entity_sound_features.config.announce.all": "全部",
  "entity_sound_features.config.announce.all_once": "全部一次",
  "entity_sound_features.config.suffix_behaviour": "後綴選擇行為",
  "entity_sound_features.config.suffix_behaviour.tooltip": "設定在從相同屬性提供的多個不同後綴中進行選擇時使用的方法\n例如 sounds.1=1 2 3\n隨機 = 每次從整個集合中隨機選擇\n一致 = 每次都為同一個實體選擇相同的後綴（與 ETF 紋理相同）\n第一個 = 將始終選擇第一個後綴\n依序 = 每次播放聲音時，將依序循環瀏覽後綴",
  "entity_sound_features.config.suffix_behaviour.random": "隨機",
  "entity_sound_features.config.suffix_behaviour.consistent": "一致",
  "entity_sound_features.config.suffix_behaviour.first": "第一個",
  "entity_sound_features.config.suffix_behaviour.sequential": "依序全部",
  "entity_sound_features.config.suffix_behaviour.sequential_entity": "每個實體依序",
  "entity_sound_features.config.playingsound.property": "playingSound\n僅限 ESF！\n將給定的字串或 regex/pattern 與聲音引擎中找到的每個目前播放的聲音事件進行配對。\n模組化聲音事件應包含模組命名空間，但原版聲音事件將不包含 minecraft: 命名空間。\n或者，如果這個屬性文字以 'print:' 開頭，則每次檢查時都會將所有找到的聲音事件 ID 列印到記錄中。\n請注意，並非聲音引擎中所有活動的聲音實際上都在玩家範圍內，因此這可能並非總是按預期運作。",
  "entity_sound_features.config.playsound.method": "playsound(id, cond, x, y, z, a) 或 playsound(id, cond, x)\n將觸發給定的聲音事件播放。\n如果聲音被觸發則傳回 true，否則傳回 false\n可以有 3 個或 6 個參數，取決於您的需求\nid= 聲音事件 ID，例如 entity.chicken.death\n模組化聲音事件應包含模組命名空間，但原版聲音事件將不包含 minecraft: 命名空間。\ncond= 必須為 true 才能觸發聲音的布林條件\nx= 聲音播放之間的最小延遲（以遊戲刻為單位），最小值為 1\ny=（可選）音量 0-1，預設值為 1.0\nz=（可選）音高 0.5-2，預設值為 1.0\na=（可選）距離 0-128，可以聽到聲音的距離，預設值為 16",
  "entity_sound_features.config.playingsound.method": "playingsound(id)\n如果給定的聲音事件 ID 目前正在聲音引擎中播放，則傳回 true，否則傳回 false 或如果有錯誤則傳回 false。\nid= 聲音事件 ID，例如 entity.chicken.death\n模組化聲音事件應包含模組命名空間，但原版聲音事件將不包含 minecraft: 命名空間。",
  "entity_sound_features.config.allow_entity": "允許聲音變化",
  "entity_sound_features.config.allow_entity.tooltip": "設定 ESF 是否允許變更這個實體的聲音。\n如果停用，ESF 將只會播放這類實體類型的預設聲音。",
  "entity_sound_features.config.entity_search.exact": "精確",
  "entity_sound_features.config.entity_search.block": "1 格方塊",
  "entity_sound_features.config.entity_search.nearest": "最近",
  "entity_sound_features.config.entity_search.client": "用戶端玩家",
  "entity_sound_features.config.entity_search": "聲音來源搜尋模式",
  "entity_sound_features.suffix_property": "聲音後綴（可選）\n匹配實體聲音設定的最後一個隨機聲音後綴編號\n預設為 0\n範例：soundSuffix.1= 2 4 6\n§asoundSuffix.<n>=<清單>",
  "entity_sound_features.rule_property": "聲音規則（可選）\n匹配實體聲音匹配的最後一個隨機聲音規則編號\n預設為 0\n範例：soundRule.1= 2 4 6\n§asoundRule.<n>=<清單>",
  "entity_sound_features.config.entity_search.tooltip": "ESF 必須在播放聲音附近搜尋來源實體。\n此設定決定 ESF 如何搜尋聲音來源實體。\n精確表示聲音 x、y、z 必須與實體完全匹配\n1 格表示 ESF 將從播放聲音的位置搜尋 1 格半徑。\n最近將簡單地找到最近的實體，不論距離多遠，這完全不推薦。\n用戶端玩家將始終使用用戶端玩家作為聲音來源。\n方塊實體只會檢查播放聲音的確切方塊。"
}